(function () {
"use strict";
var provision = function (active_users, num_users) {
  var msg = "user is not authenticated as target user";
  console.log('hooking up begin provisioning with users=' + active_users);

  // username@some-proxy.tld
  navigator.id.beginProvisioning(function(email, cert_duration) {
    console.log('callback');
    console.log('begining provisioning ' + email + ' ' + cert_duration);

    if (! active_users || num_users === 0) {
      console.log('no session, failing');
      navigator.id.raiseProvisioningFailure(msg);
    } else {
      if (active_users[ email ] === true) {
        console.log('emails matched ' + active_users + ' == ' + email + ' next genKeyPair');
        navigator.id.genKeyPair(function(pubkey) {

          $.ajax({
            url: '/provision',
            data: JSON.stringify({
              pubkey: pubkey,
              duration: cert_duration,
              "_csrf": "<%= csrf_token %>",
              authed_email: email
            }),
            type: 'POST',
            headers: { "Content-Type": 'application/json' },
            dataType: 'json',
            success: function(r) {
              console.log("We successfully authed, registering cert");
              // all done!  woo!
              navigator.id.registerCertificate(r.cert);
            },
            error: function(r) {
              console.log("Error certifying key, raising provision failure");
              navigator.id.raiseProvisioningFailure(msg);
            }
          });

        });
      } else {
        console.log('Users [', active_users, '] and email [', email, '] dont match');
        navigator.id.raiseProvisioningFailure(msg);
      }
    }
  }); //beginProvisioning
};

provision(<%- JSON.stringify(emails) %>, <%= num_emails %>);

})();
